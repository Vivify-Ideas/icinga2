---
- import_tasks: icinga2_Debian.yml
  when: (ansible_os_family == 'Debian' and ansible_distribution != 'Ubuntu')

- import_tasks: icinga2_Ubuntu.yml
  when: (ansible_os_family == 'Debian' and ansible_distribution == 'Ubuntu')

- import_tasks: icinga2_RedHat.yml
  when: (ansible_os_family == 'RedHat')

- name: create pki directory
  file:
    path: /etc/icinga2/pki
    state: directory
    owner: icinga
    group: icinga
  when: (ansible_os_family == 'RedHat')

- name: create cert
  shell: |
    icinga2 pki new-cert \
    --cn {{ ansible_eth1.ipv4.address }} \
    --key /etc/icinga2/pki/{{ ansible_eth1.ipv4.address }}.key \
    --cert /etc/icinga2/pki/{{ ansible_eth1.ipv4.address }}.crt
  become: yes
  become_user: root

- name: save the masters cert as trustedcert
  shell: |
    icinga2 pki save-cert \
    --key /etc/icinga2/pki/{{ ansible_eth1.ipv4.address }}.key \
    --cert /etc/icinga2/pki/{{ ansible_eth1.ipv4.address }}.crt \
    --trustedcert /etc/icinga2/pki/trusted-master.crt \
    --host {{ icinga2_master_private_ip }}

- name: request the certificate from the icinga server
  shell: |
    icinga2 pki request \
    --host {{ icinga2_master_private_ip }} \
    --port {{ icinga2_port }} \
    --ticket {{ ansible_eth1.ipv4.address|icinga_ticket(icinga2_ticket_salt) }} \
    --key /etc/icinga2/pki/{{ ansible_eth1.ipv4.address }}.key \
    --cert /etc/icinga2/pki/{{ ansible_eth1.ipv4.address }}.crt \
    --trustedcert /etc/icinga2/pki/trusted-master.crt --ca /etc/icinga2/pki/ca.key

- name: setup icinga node
  shell: |
    icinga2 node setup \
    --ticket {{ ansible_eth1.ipv4.address|icinga_ticket(icinga2_ticket_salt) }} \
    --cn {{ ansible_eth1.ipv4.address }} \
    --endpoint {{ icinga2_master_endpoint }} \
    --zone {{ ansible_eth1.ipv4.address }} \
    --parent_host {{ icinga2_master_private_ip }} \
    --trustedcert /etc/icinga2/pki/trusted-master.crt \
    --accept-commands --accept-config
  become: true

- name: Start Icinga2
  service: name=icinga2
    state=restarted
    enabled=yes
